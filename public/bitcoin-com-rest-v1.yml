openapi: 3.0.0
info:
  description: >-
    rest.bitcoin.com is the REST layer for Bitcoin.com's Cloud. More info:
    [developer.bitcoin.com](https://developer.bitcoin.com). #bitbox chatroom [ambassador.cash](http://ambassador.cash)
  version: 1.0.1
  title: REST
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: address
    description: Address details and utxo
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/address.html'
  - name: block
    description: Block Details
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/block.html'
  - name: blockchain
    description: Interacting w/ the BCH Blockchain
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/blockchain.html'
  - name: control
    description: Control your blockchain
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/control.html'
  - name: mining
    description: Mining w/ the BCH Blockchain
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/mining.html'
  - name: rawtransactions
    description: Create transactions to be transmitted to the network.
    externalDocs:
      description: Find out more
      url: 'https://www.bitbox.earth/bitboxcli/rawtransactions'
  - name: transaction
    description: Transaction details.
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/rawtransactions.html'
  - name: util
    description: Bitcoin Cash utilities.
    externalDocs:
      description: Find out more
      url: 'https://developer.bitcoin.com/bitbox/docs/util.html'
paths:
  '/address/details/{address}':
    get:
      tags:
        - address
      summary: Address details
      description: Returns the details of an address including balance
      operationId: details
      parameters:
        - name: address
          in: path
          description: the address or array of addresses in cashAddr or legacy
          required: true
          example: 'bitcoincash:qzs02v05l7qs5s24srqju498qu55dwuj0cx5ehjm2c'
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDetails'
        '400':
          description: Received an invalid Bitcoin Cash address as input.
          content:
            application/json:
              schema:
                status: 500
                message: Received an invalid Bitcoin Cash address as input.
  '/address/utxo/{address}':
    get:
      tags:
        - address
      summary: Address utxos
      description: Returns the list of utxo for an address
      operationId: utxo
      parameters:
        - name: address
          in: path
          description: the address or an array of addresses in cashAddr or legacy
          required: true
          example: 'bitcoincash:qzs02v05l7qs5s24srqju498qu55dwuj0cx5ehjm2c'
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUtxo'
        '400':
          description: Received an invalid Bitcoin Cash address as input.
          content:
            application/json:
              schema:
                status: 500
                message: Received an invalid Bitcoin Cash address as input.
  '/address/unconfirmed/{address}':
    get:
      tags:
        - address
      summary: Unconfirmed transactions for an address
      description: Returns the list of unconfirmed transactions for an address
      operationId: unconfirmed
      parameters:
        - name: address
          in: path
          description: the address or an array of addresses in cashAddr or legacy
          required: true
          example: 'bitcoincash:qzs02v05l7qs5s24srqju498qu55dwuj0cx5ehjm2c'
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUnconfirmed'
        '400':
          description: Received an invalid Bitcoin Cash address as input.
          content:
            application/json:
              schema:
                status: 500
                message: Received an invalid Bitcoin Cash address as input.
  '/block/details/{id}':
    get:
      tags:
        - block
      summary: Block details
      description: Details about a block
      operationId: blockDetails
      parameters:
        - name: id
          in: path
          description: Block hash/height
          required: true
          example: '500000'
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDetails'
        '400':
          description: Received an invalid block height.
          content:
            application/json:
              schema:
                status: 500
                message: Received an invalid block height.
  /blockchain/getBestBlockHash:
    get:
      tags:
        - blockchain
      summary: Hash of the best block in the longest blockchain.
      description: Returns the hash of the best (tip) block in the longest blockchain.
      operationId: getBestBlockHash
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BestBlockHash'
  '/blockchain/getBlock/{hash}':
    get:
      tags:
        - blockchain
      summary: Information about block hash.
      description: >-
        If verbose is false, returns a string that is serialized, hex-encoded
        data for block 'hash'. If verbose is true, returns an Object with
        information about block hash.
      operationId: getBlock
      parameters:
        - name: hash
          in: path
          description: the block hash
          required: true
          example: 00000000000000000046056a2d6728bc757862e7924a755125a519a2fec43c79
          schema:
            type: string
        - name: verbose
          in: query
          description: 'true for a json object, false for the hex encoded data'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
        '400':
          description: Block not found
          content:
            application/json:
              schema:
                status: 500
                message: Block not found
  /blockchain/getBlockchainInfo:
    get:
      tags:
        - blockchain
      summary: Info regarding blockchain processing
      description: >-
        Returns an object containing various state info regarding blockchain
        processing.
      operationId: getBlockchainInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainInfo'
  /blockchain/getBlockCount:
    get:
      tags:
        - blockchain
      summary: Number of blocks in the longest blockchain.
      description: Returns the number of blocks in the longest blockchain.
      operationId: getBlockCount
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCount'
  '/blockchain/getBlockHash/{height}':
    get:
      tags:
        - blockchain
      summary: Hash of block in best-block-chain at height provided.
      description: Returns hash of block in best-block-chain at height provided.
      operationId: getBlockHash
      parameters:
        - name: height
          in: path
          description: the height index
          required: true
          example: 500000
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockHash'
        '400':
          description: Block not found
          content:
            application/json:
              schema:
                status: 500
                message: Block not found
  '/blockchain/getBlockHeader/{hash}':
    get:
      tags:
        - blockchain
      summary: Information about blockheader hash
      description: >-
        If verbose is false, returns a string that is serialized, hex-encoded
        data for blockheader 'hash'. If verbose is true, returns an Object with
        information about blockheader hash.
      operationId: getBlockHeader
      parameters:
        - name: hash
          in: path
          description: the block hash
          required: true
          example: 000000000000000005e14d3f9fdfb70745308706615cfa9edca4f4558332b201
          schema:
            type: string
        - name: verbose
          in: query
          description: 'true for a json object, false for the hex encoded data'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockHeader'
        '400':
          description: Block not found
          content:
            application/json:
              schema:
                status: 500
                message: Block not found
  /blockchain/getChainTips:
    get:
      tags:
        - blockchain
      summary: Information about all known tips in the block tree
      description: >-
        Return information about all known tips in the block tree, including the
        main chain as well as orphaned branches.
      operationId: getChainTips
      responses:
        '200':
          description: successful operation
  /blockchain/getDifficulty:
    get:
      tags:
        - blockchain
      summary: Proof-of-work difficulty
      description: >-
        Returns the proof-of-work difficulty as a multiple of the minimum
        difficulty.
      operationId: getDifficulty
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Difficulty'
  '/blockchain/getMempoolAncestors/{txid}':
    get:
      tags:
        - blockchain
      summary: Returns all in-mempool ancestors.
      description: 'If txid is in the mempool, returns all in-mempool ancestors.'
      operationId: getMempoolAncestors
      parameters:
        - name: txid
          in: path
          description: the transaction id (must be in mempool)
          required: true
          example: fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33
          schema:
            type: string
        - name: verbose
          in: query
          description: 'True for a json object, false for array of transaction ids'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolAncestors'
        '400':
          description: Transaction not in mempool
  '/blockchain/getMempoolDescendants/{txid}':
    get:
      tags:
        - blockchain
      summary: Returns all in-mempool descendants.
      description: 'If txid is in the mempool, returns all in-mempool descendants.'
      operationId: getMempoolDescendants
      parameters:
        - name: txid
          in: path
          description: the transaction id (must be in mempool)
          required: true
          example: fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33
          schema:
            type: string
        - name: verbose
          in: query
          description: 'True for a json object, false for array of transaction ids'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolDescendants'
        '400':
          description: Transaction not in mempool
  '/blockchain/getMempoolEntry/{txid}':
    get:
      tags:
        - blockchain
      summary: Mempool data for transaction
      description: Returns mempool data for given transaction
      operationId: getMempoolEntry
      parameters:
        - name: txid
          in: path
          description: the transaction id (must be in mempool)
          required: true
          example: fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Transaction not in mempool
  /blockchain/getMempoolInfo:
    get:
      tags:
        - blockchain
      summary: The active state of the TX memory pool.
      description: Returns details on the active state of the TX memory pool.
      operationId: getMempoolInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolInfo'
  /blockchain/getRawMempool:
    get:
      tags:
        - blockchain
      summary: All transaction ids in memory pool.
      description: >-
        Returns all transaction ids in memory pool as a json array of string
        transaction ids.
      operationId: getRawMempool
      parameters:
        - name: verbose
          in: query
          description: 'True for a json object, false for array of transaction ids'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawMempool'
  '/blockchain/getTxOut/{txid}/{n}':
    get:
      tags:
        - blockchain
      summary: Details about unspent transaction output.
      description: Returns details about an unspent transaction output.
      operationId: getTxOut
      parameters:
        - name: txid
          in: path
          description: the transaction id
          required: true
          example: fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33
          schema:
            type: string
        - name: 'n'
          in: path
          description: vout number
          required: true
          schema:
            type: number
            default: 0
        - name: verbose
          in: query
          description: Whether to include the mempool
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value/s - Null
  '/blockchain/getTxOutProof/{txids}':
    get:
      tags:
        - blockchain
      summary: Hex-encoded proof that 'txid' was included.
      description: Returns a hex-encoded proof that 'txid' was included in a block.
      operationId: getTxOutProof
      parameters:
        - name: txids
          in: path
          description: >-
            a json array of txids to filter [ 'txid' string A transaction hash
            ,... ]
          required: true
          schema:
            type: string
        - name: blockhash
          in: query
          description: 'if specified, looks for txid in the block with this hash'
          required: false
          schema:
            type: string
        - name: data
          in: query
          description: 'a string that is a serialized, hex-encoded data for the proof.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
  '/blockchain/verifyTxOutProof/{proof}':
    get:
      tags:
        - blockchain
      summary: Verify that a proof points to a transaction in a block
      description: >-
        Verifies that a proof points to a transaction in a block, returning the
        transaction it commits to and throwing an RPC error if the block is not
        in our best chain
      operationId: verifyTxOutProof
      parameters:
        - name: proof
          in: path
          description: The hex-encoded proof generated by gettxoutproof
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
  /control/getInfo:
    get:
      tags:
        - control
      summary: Various state info.
      description: Returns an object containing various state info.
      operationId: getInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
  /mining/getMiningInfo:
    get:
      tags:
        - mining
      summary: Returns a json object containing mining-related information.
      description: ''
      operationId: getMiningInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiningInfo'
  /mining/getNetworkHashps:
    get:
      tags:
        - mining
      summary: Estimated network hashes per second
      description: >-
        Returns the estimated network hashes per second based on the last n
        blocks. Pass in [blocks] to override # of blocks, -1 specifies since
        last difficulty change. Pass in [height] to estimate the network speed
        at the time when a certain block was found.
      operationId: getNetworkHashps
      parameters:
        - in: query
          name: nblocks
          description: 'the number of blocks, or -1 for blocks since last difficulty change.'
          required: false
          schema:
            type: number
            default: 120
        - in: query
          name: height
          description: to estimate at the time of the given height.
          required: false
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkHashps'
  '/rawtransactions/decodeRawTransaction/{hex}':
    get:
      tags:
        - rawtransactions
      summary: Return the hex encoded transaction.
      description: >-
        Return a JSON object representing the serialized, hex-encoded
        transaction.
      operationId: decodeRawTransaction
      parameters:
        - in: path
          name: hex
          description: The transaction hex string
          required: true
          example: >-
            01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodeRawTransaction'
        '400':
          description: TX decode failed
  '/rawtransactions/decodeScript/{hex}':
    get:
      tags:
        - rawtransactions
      summary: Decode a hex-encoded script.
      description: Decode a hex-encoded script.
      operationId: decodeScript
      parameters:
        - in: path
          name: hex
          description: The hex encoded script
          required: true
          example: >-
            4830450221009a51e00ec3524a7389592bc27bea4af5104a59510f5f0cfafa64bbd5c164ca2e02206c2a8bbb47eabdeed52f17d7df668d521600286406930426e3a9415fe10ed592012102e6e1423f7abde8b70bca3e78a7d030e5efabd3eb35c19302542b5fe7879c1a16
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodeScript'
        '400':
          description: Argument must be hexadecimal string
  '/rawtransactions/getRawTransaction/{txid}':
    get:
      tags:
        - rawtransactions
      summary: Return the raw transaction data.
      description: >-
        return the raw transaction data. If verbose is 'true', returns an Object
        with information about 'txid'. If verbose is 'false' or omitted, returns
        a string that is serialized, hex-encoded data for 'txid'.
      operationId: getRawTransaction
      parameters:
        - in: path
          name: txid
          description: The transaction id
          required: true
          example: 0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098
          schema:
            type: string
        - in: query
          name: verbose
          description: 'If false, return a string, otherwise return a json object'
          required: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRawTransaction'
        '400':
          description: Transaction not found
  '/rawtransactions/sendRawTransaction/{hex}':
    post:
      tags:
        - rawtransactions
      summary: Submits raw transaction to local node and network.
      description: >-
        Submits raw transaction (serialized, hex-encoded) to local node and
        network. Also see createrawtransaction and signrawtransaction calls.
      operationId: sendRawTransaction
      parameters:
        - in: path
          name: hex
          description: The hex string of the raw transaction
          required: true
          example: >-
            01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704ffff001d0104ffffffff0100f2052a0100000043410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac00000000
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Transaction not found
  '/transaction/details/{txid}':
    get:
      tags:
        - transaction
      summary: Transaction details
      description: Details about a transaction
      operationId: transactionDetails
      parameters:
        - in: path
          name: txid
          description: single txid or url encoded array of txids
          required: true
          example: 0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '400':
          description: Transaction not found
  '/util/validateAddress/{address}':
    get:
      tags:
        - util
      summary: Information about the given bitcoin address.
      description: Return information about the given bitcoin address.
      operationId: validateAddress
      parameters:
        - in: path
          name: address
          description: The bitcoin address to validate
          required: true
          example: 'bitcoincash:qzs02v05l7qs5s24srqju498qu55dwuj0cx5ehjm2c'
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAddress'
        '400':
          description: Invalid Address
servers:
  - url: /v1
components:
  schemas:
    AddressDetails:
      type: object
      properties:
        balance:
          type: number
          format: float
        balanceSat:
          type: number
          format: float
        totalReceived:
          type: number
          format: float
        totalReceivedSat:
          type: number
          format: float
        totalSent:
          type: number
          format: float
        totalSentSat:
          type: number
          format: float
        unconfirmedBalance:
          type: number
          format: float
        unconfirmedBalanceSat:
          type: number
          format: float
        unconfirmedTxApperances:
          type: number
          format: float
        txApperances:
          type: number
        transactions:
          type: array
          items:
            type: string
        legacyAddress:
          type: string
        cashAddress:
          type: string
    AddressUtxo:
      type: array
      items:
        $ref: '#/components/schemas/Utxo'
    Utxo:
      type: object
      properties:
        txid:
          type: string
        vout:
          type: number
        scriptPubKey:
          type: string
        amount:
          type: number
          format: float
        satoshis:
          type: number
        height:
          type: number
        confirmations:
          type: number
        legacyAddress:
          type: string
        cashAddress:
          type: string
    AddressUnconfirmed:
      type: array
      items:
        $ref: '#/components/schemas/Unconfirmed'
    Unconfirmed:
      type: object
      properties:
        txid:
          type: string
        vout:
          type: number
        scriptPubKey:
          type: string
        amount:
          type: number
          format: float
        satoshis:
          type: number
        height:
          type: number
        confirmations:
          type: number
        legacyAddress:
          type: string
        cashAddress:
          type: string
    BlockDetails:
      type: object
      properties:
        hash:
          type: string
        size:
          type: number
        height:
          type: number
        version:
          type: number
        merkleroot:
          type: string
        tx:
          type: array
          items:
            type: string
        time:
          type: number
        nonce:
          type: number
        bits:
          type: string
        difficulty:
          type: number
          format: float
        chainwork:
          type: string
        confirmations:
          type: number
        previousblockhash:
          type: string
        nextblockhash:
          type: string
        reward:
          type: number
          format: float
        isMainChain:
          type: boolean
        poolInfo:
          type: object
          properties:
            poolName: string
            url: string
    BestBlockHash:
      type: string
    Block:
      type: object
      properties:
        hash:
          type: string
        confirmations:
          type: number
        size:
          type: number
        height:
          type: number
        version:
          type: number
        versionHex:
          type: string
        merkleroot:
          type: string
        tx:
          type: array
          items:
            type: string
        time:
          type: number
        mediantime:
          type: number
        nonce:
          type: number
        bits:
          type: string
        difficulty:
          type: number
          format: float
        chainwork:
          type: string
        previousblockhash:
          type: string
        nextblockhash:
          type: string
    BlockchainInfo:
      type: object
      properties:
        chain:
          type: string
        blocks:
          type: number
        headers:
          type: number
        bestblockhash:
          type: string
        difficulty:
          type: number
          format: float
        mediantime:
          type: number
        verificationprogress:
          type: number
          format: float
        chainwork:
          type: string
        pruned:
          type: boolean
        softforks:
          type: array
          items:
            type: object
            properties:
              id: string
              version: number
              reject:
                type: object
                properties:
                  status: boolean
        bip9_softforks:
          type: object
          properties:
            status: string
            startTime: number
            timeout: number
            since: number
    BlockCount:
      type: number
    BlockHash:
      type: string
    BlockHeader:
      type: object
      properties:
        hash:
          type: string
        confirmations:
          type: number
        height:
          type: number
        version:
          type: number
        versionHex:
          type: string
        merkleroot:
          type: string
        time:
          type: number
        mediantime:
          type: number
        nonce:
          type: number
        bits:
          type: string
        difficulty:
          type: number
          format: float
        chainwork:
          type: string
        previousblockhash:
          type: string
        nextblockhash:
          type: string
    Difficulty:
      type: number
      format: float
    MempoolInfo:
      type: object
      properties:
        size:
          type: number
        bytes:
          type: number
        usage:
          type: number
        maxmempool:
          type: number
        mempoolminfee:
          type: number
    RawMempool:
      type: array
      items:
        type: string
    DecodeRawTransaction:
      type: object
      properties:
        txid:
          type: string
        hash:
          type: string
        size:
          type: number
        version:
          type: number
        vin:
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              vout:
                type: number
              scriptSig:
                type: object
                properties:
                  asm:
                    type: string
                  hex:
                    type: string
              sequence:
                type: string
        vout:
          type: array
          items:
            type: object
            properties:
              value:
                type: number
              'n':
                type: number
              scriptPubkey:
                type: object
                properties:
                  asm:
                    type: string
                  hex:
                    type: string
                  reqSigs:
                    type: number
                  type:
                    type: string
                  addresses:
                    type: array
                    items:
                      address:
                        type: string
    DecodeScript:
      type: object
      properties:
        asm:
          type: string
        type:
          type: string
        p2sh:
          type: string
    GetRawTransaction:
      type: object
      properties:
        hex:
          type: string
        txid:
          type: string
        hash:
          type: string
        size:
          type: number
        version:
          type: number
        vin:
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              vout:
                type: number
              scriptSig:
                type: object
                properties:
                  asm:
                    type: string
                  hex:
                    type: string
                  sequence:
                    type: string
        vout:
          type: array
          items:
            type: object
            properties:
              value:
                type: number
              'n':
                type: number
              scriptPubkey:
                type: object
                properties:
                  asm:
                    type: string
                  hex:
                    type: string
                  reqSigs:
                    type: number
                  type:
                    type: string
                  addresses:
                    type: array
                    items:
                      address:
                        type: string
        blockhash:
          type: string
        confirmations:
          type: number
        time:
          type: number
        blocktime:
          type: number
    TransactionDetails:
      type: object
      properties:
        txid:
          type: string
        version:
          type: number
        locktime:
          type: number
        vin:
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              vout:
                type: number
              sequence:
                type: number
              'n':
                type: number
              scriptSig:
                type: object
                properties:
                  hex:
                    type: string
                  asm:
                    type: string
                  value:
                    type: number
                  legacyAddress:
                    type: string
                  cashAddress:
                    type: string
        vout:
          type: array
          items:
            objects:
              type: object
              properties:
                value:
                  type: number
                'n':
                  type: number
                scriptPubkey:
                  type: object
                  properties:
                    hex:
                      type: string
                    asm:
                      type: string
                    addresses:
                      type: array
                      items:
                        address:
                          type: string
                    type:
                      type: string
                spentTxId:
                  type: string
                spentIndex:
                  type: number
                spentHeight:
                  type: number
            type: object
            properties:
              value:
                type: number
              'n':
                type: number
              scriptPubkey:
                type: object
                properties:
                  hex:
                    type: string
                  asm:
                    type: string
              spentTxId:
                type: string
              spentIndex:
                type: number
              spentHeight:
                type: number
        blockhash:
          type: string
        blockheight:
          type: number
        confirmations:
          type: number
        time:
          type: number
        valueOut:
          type: number
        size:
          type: number
        valueIn:
          type: number
        fees:
          type: number
    ValidateAddress:
      type: object
      properties:
        isvalid:
          type: boolean
        address:
          type: string
        scriptPubKey:
          type: string
        ismine:
          type: boolean
        iswatchonly:
          type: boolean
        isscript:
          type: boolean
    Info:
      type: object
      properties:
        version:
          type: number
        protocolversion:
          type: number
        blocks:
          type: number
        timeoffset:
          type: number
        connections:
          type: number
        proxy:
          type: string
        difficulty:
          type: number
          format: float
        paytxfee:
          type: number
        relayfee:
          type: number
          format: float
        errors:
          type: string
    MemoryInfo:
      type: object
      properties:
        locked:
          type: object
          properties:
            used:
              type: number
            free:
              type: number
            total:
              type: number
            locked:
              type: number
            chunks_used:
              type: number
            chunks_free:
              type: number
    MiningInfo:
      type: object
      properties:
        blocks:
          type: number
        currentblocksize:
          type: number
        currentblocktx:
          type: number
        difficulty:
          type: number
          format: float
        blockprioritypercentage:
          type: number
        errors:
          type: string
        networkhashps:
          type: number
        pooledtx:
          type: number
        chain:
          type: string
    NetworkHashps:
      type: number
    ConnectionCount:
      type: number
    MempoolAncestors:
      type: array
      items:
        type: string
    MempoolDescendants:
      type: array
      items:
        type: string
